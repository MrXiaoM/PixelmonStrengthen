plugins {
    id 'java'
}

group = 'top.mrxiaom'
version = '2.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'spigotmc-repo-public'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'aliyun'
        url = 'https://maven.aliyun.com/repository/public'
    }
    maven {
        name = 'papi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = 'codemc'
        url = 'https://repo.codemc.io/repository/maven-public/'
    }
    maven {
        name = 'dakanilabs'
        url = 'https://repo.dakanilabs.com/repository/public/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
    // 请自行使用 BuildTools 编译 Spigot
    compileOnly 'org.spigotmc:spigot:1.12.2-R0.1-SNAPSHOT'
    implementation 'me.clip:placeholderapi:2.10.9'
    implementation 'net.milkbowl.vault:VaultAPI:1.7'
    implementation 'org.black_ixx:PlayerPoints:2.1.3@jar'
    // https://download.nodecdn.net/containers/reforged/server/release/${version}/Pixelmon-1.12.2-${version}-server.jar
    implementation fileTree(dir: 'libs', includes: ['*.jar'])
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
